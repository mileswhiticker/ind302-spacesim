#include "HabitableObject.hpp"

#include "Scene_Game.hpp"
#include "GameManager.hpp"

void HabitableObject::UpdateUIRes(Resource::ResourceType a_ResType)
{
	switch(a_ResType)
	{
	case(Resource::COMPONENTS):
	case(Resource::CIRCUITRY):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayElectronic(this);
			break;
		}
	case(Resource::SHEETMETAL):
	case(Resource::GIRDERS):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayMaterials(this);
			break;
		}
	case(Resource::CARBONACEOUS):
	case(Resource::SILICACEOUS):
	case(Resource::METALLIC):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayMining(this);
			break;
		}
	case(Resource::DOMESTICGOODS):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayDomesticG(this);
			break;
		}
	case(Resource::FOOD):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayFood(this);
			break;
		}
	case(Resource::FUEL):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayFuel(this);
			break;
		}
	case(Resource::HYDROGEN):
	case(Resource::OXYGEN):
	case(Resource::WATERCRYSTALS):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayGasCollection(this);
			break;
		}
	case(Resource::LUXURYGOODS):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayLuxuryG(this);
			break;
		}
	case(Resource::ORGANICWASTE):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayWasteRec(this);
			break;
		}
	case(Resource::SCRAPWASTE):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayScrapRec(this);
			break;
		}
	case(Resource::WATER):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayWater(this);
			break;
		}
	}
}

void HabitableObject::UpdateUIInf(Infrastructure::InfrastructureType a_InfType)
{
	switch(a_InfType)
	{
	case(Infrastructure::ATMOSPHERICS):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayAtmos(this);
			break;
		}
	case(Infrastructure::COMMERCIAL):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayComm(this);
			break;
		}
	/*case(Infrastructure::DISPOSAL):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayAtmos(this);
			break;
		}*/
	case(Infrastructure::POWER_GENERATION):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayPower(this);
			break;
		}
	case(Infrastructure::RESIDENTIAL):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayResidential(this);
			break;
		}
	case(Infrastructure::STORAGE):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayStorage(this);
			break;
		}
	case(Infrastructure::DOCKING):
		{
			//GameManager::GetSingleton().GetGameScene()->DisplayResidential(this);
			break;
		}
	case(Infrastructure::SHIP_PRODUCTION):
		{
			//GameManager::GetSingleton().GetGameScene()->DisplayScrapRec(this);
			break;
		}
	/*case(Infrastructure::DOMESTICGOODS_PRODUCTION):
		{
			return "DOMESTICGOODS_PRODUCTION";
			break;
		}
	case(Infrastructure::ELECTRONICS_PRODUCTION):
		{
			return "ELECTRONICS_PRODUCTION";
			break;
		}
	case(Infrastructure::FOOD_PROCESSING):
		{
			return "FOOD_PROCESSING";
			break;
		}
	case(Infrastructure::FUEL_PROCESSING):
		{
			return "FUEL_PROCESSING";
			break;
		}
	case(Infrastructure::LUXURYGOODS_PRODUCTION):
		{
			return "LUXURYGOODS_PRODUCTION";
			break;
		}
	case(Infrastructure::GAS_PROCESSING):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayGasCollection(this);
			break;
		}
	case(Infrastructure::MATERIALS_PRODUCTION):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayMaterials(this);
			break;
		}
	case(Infrastructure::MINING):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayMining(this);
			break;
		}
	case(Infrastructure::SCRAP_RECYCLING):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayScrapRec(this);
			break;
		}
	case(Infrastructure::WASTE_RECYCLING):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayWasteRec(this);
			break;
		}
	case(Infrastructure::WATER_PURIFICATION):
		{
			GameManager::GetSingleton().GetGameScene()->DisplayWater(this);
			break;
		}*/
	}
}
